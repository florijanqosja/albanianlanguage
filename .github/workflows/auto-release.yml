name: Auto Release on Merge

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  auto-release:
    runs-on: ubuntu-latest
    # Skip if commit message contains [no-release]
    if: "!contains(github.event.head_commit.message, '[no-release]')"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Get current version
      id: current_version
      run: |
        CURRENT_VERSION=$(grep -o "__version__ = \"[0-9]*\.[0-9]*\.[0-9]*\"" albanianlanguage/__version__.py | cut -d'"' -f2)
        echo "Current version: $CURRENT_VERSION"
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
    
    - name: Check if release already exists
      id: check_release
      run: |
        VERSION=${{ steps.current_version.outputs.current_version }}
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "Release v$VERSION already exists, skipping..."
          echo "should_skip=true" >> $GITHUB_OUTPUT
        else
          echo "Release v$VERSION does not exist, proceeding..."
          echo "should_skip=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run tests
      if: steps.check_release.outputs.should_skip == 'false'
      run: |
        pip install -e .
        pip install -r requirements-dev.txt
        pytest
    
    - name: Create Release
      if: steps.check_release.outputs.should_skip == 'false'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.current_version.outputs.current_version }}
        release_name: Release v${{ steps.current_version.outputs.current_version }}
        body: |
          Release v${{ steps.current_version.outputs.current_version }}
          
          Changes in this release:
          - ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    
    - name: Build and publish
      if: steps.check_release.outputs.should_skip == 'false'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m build
        twine upload dist/* 